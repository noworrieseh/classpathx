# Makefile for GNU classpathx "GNUJAXP" project
#
# You are free to redistribute this file. NO WARRANTY or fitness 
# for purpose is implied by this notice.
#
# !!!                                                  !!!
# !!!   MAKE EDITS TO "Makefile.in", not "Makefile"    !!!
# !!!                                                  !!!
#
# Use the "configure" command to generate the project Makefile
# from its "Makefile.in" template.
#

LIBNAME = gnujaxp

##set by configure

SRCDIR = @srcdir@
SOURCEDIR=$(SRCDIR)/source

GCJ = @GCJ@

SOURCEFILES = \
	$(SOURCEDIR)/javax/xml/parsers/ClassStuff.java \
	$(SOURCEDIR)/javax/xml/parsers/DocumentBuilderFactory.java \
	$(SOURCEDIR)/javax/xml/parsers/DocumentBuilder.java \
	$(SOURCEDIR)/javax/xml/parsers/FactoryConfigurationError.java \
	$(SOURCEDIR)/javax/xml/parsers/ParserConfigurationException.java \
	$(SOURCEDIR)/javax/xml/parsers/SAXParserFactory.java \
	$(SOURCEDIR)/javax/xml/parsers/SAXParser.java \
	$(SOURCEDIR)/javax/xml/transform/ClassStuff.java \
	$(SOURCEDIR)/javax/xml/transform/ErrorListener.java \
	$(SOURCEDIR)/javax/xml/transform/OutputKeys.java \
	$(SOURCEDIR)/javax/xml/transform/Result.java \
	$(SOURCEDIR)/javax/xml/transform/Source.java \
	$(SOURCEDIR)/javax/xml/transform/SourceLocator.java \
	$(SOURCEDIR)/javax/xml/transform/Templates.java \
	$(SOURCEDIR)/javax/xml/transform/TransformerConfigurationException.java \
	$(SOURCEDIR)/javax/xml/transform/TransformerException.java \
	$(SOURCEDIR)/javax/xml/transform/TransformerFactory.java \
	$(SOURCEDIR)/javax/xml/transform/TransformerFactoryConfigurationError.java \
	$(SOURCEDIR)/javax/xml/transform/Transformer.java \
	$(SOURCEDIR)/javax/xml/transform/URIResolver.java \
	$(SOURCEDIR)/javax/xml/transform/dom/DOMLocator.java \
	$(SOURCEDIR)/javax/xml/transform/dom/DOMResult.java \
	$(SOURCEDIR)/javax/xml/transform/dom/DOMSource.java \
	$(SOURCEDIR)/javax/xml/transform/sax/SAXResult.java \
	$(SOURCEDIR)/javax/xml/transform/sax/SAXSource.java \
	$(SOURCEDIR)/javax/xml/transform/sax/SAXTransformerFactory.java \
	$(SOURCEDIR)/javax/xml/transform/sax/TemplatesHandler.java \
	$(SOURCEDIR)/javax/xml/transform/sax/TransformerHandler.java \
	$(SOURCEDIR)/javax/xml/transform/stream/StreamResult.java \
	$(SOURCEDIR)/javax/xml/transform/stream/StreamSource.java \
	$(SOURCEDIR)/org/w3c/dom/events/DocumentEvent.java \
	$(SOURCEDIR)/org/w3c/dom/events/EventException.java \
	$(SOURCEDIR)/org/w3c/dom/events/Event.java \
	$(SOURCEDIR)/org/w3c/dom/events/EventListener.java \
	$(SOURCEDIR)/org/w3c/dom/events/EventTarget.java \
	$(SOURCEDIR)/org/w3c/dom/events/MouseEvent.java \
	$(SOURCEDIR)/org/w3c/dom/events/MutationEvent.java \
	$(SOURCEDIR)/org/w3c/dom/events/UIEvent.java \
	$(SOURCEDIR)/org/w3c/dom/traversal/DocumentTraversal.java \
	$(SOURCEDIR)/org/w3c/dom/traversal/NodeFilter.java \
	$(SOURCEDIR)/org/w3c/dom/traversal/NodeIterator.java \
	$(SOURCEDIR)/org/w3c/dom/traversal/TreeWalker.java \
	$(SOURCEDIR)/org/w3c/dom/views/AbstractView.java \
	$(SOURCEDIR)/org/w3c/dom/views/DocumentView.java \
	$(SOURCEDIR)/org/w3c/dom/Attr.java \
	$(SOURCEDIR)/org/w3c/dom/CDATASection.java \
	$(SOURCEDIR)/org/w3c/dom/CharacterData.java \
	$(SOURCEDIR)/org/w3c/dom/Comment.java \
	$(SOURCEDIR)/org/w3c/dom/DocumentFragment.java \
	$(SOURCEDIR)/org/w3c/dom/Document.java \
	$(SOURCEDIR)/org/w3c/dom/DocumentType.java \
	$(SOURCEDIR)/org/w3c/dom/DOMException.java \
	$(SOURCEDIR)/org/w3c/dom/DOMImplementation.java \
	$(SOURCEDIR)/org/w3c/dom/Element.java \
	$(SOURCEDIR)/org/w3c/dom/Entity.java \
	$(SOURCEDIR)/org/w3c/dom/EntityReference.java \
	$(SOURCEDIR)/org/w3c/dom/NamedNodeMap.java \
	$(SOURCEDIR)/org/w3c/dom/Node.java \
	$(SOURCEDIR)/org/w3c/dom/NodeList.java \
	$(SOURCEDIR)/org/w3c/dom/Notation.java \
	$(SOURCEDIR)/org/w3c/dom/ProcessingInstruction.java \
	$(SOURCEDIR)/org/w3c/dom/Text.java \
	$(SOURCEDIR)/org/xml/sax/ext/Attributes2.java \
	$(SOURCEDIR)/org/xml/sax/ext/Attributes2Impl.java \
	$(SOURCEDIR)/org/xml/sax/ext/DeclHandler.java \
	$(SOURCEDIR)/org/xml/sax/ext/DefaultHandler2.java \
	$(SOURCEDIR)/org/xml/sax/ext/EntityResolver2.java \
	$(SOURCEDIR)/org/xml/sax/ext/LexicalHandler.java \
	$(SOURCEDIR)/org/xml/sax/ext/Locator2.java \
	$(SOURCEDIR)/org/xml/sax/ext/Locator2Impl.java \
	$(SOURCEDIR)/org/xml/sax/helpers/AttributeListImpl.java \
	$(SOURCEDIR)/org/xml/sax/helpers/AttributesImpl.java \
	$(SOURCEDIR)/org/xml/sax/helpers/DefaultHandler.java \
	$(SOURCEDIR)/org/xml/sax/helpers/LocatorImpl.java \
	$(SOURCEDIR)/org/xml/sax/helpers/NamespaceSupport.java \
	$(SOURCEDIR)/org/xml/sax/helpers/NewInstance.java \
	$(SOURCEDIR)/org/xml/sax/helpers/ParserAdapter.java \
	$(SOURCEDIR)/org/xml/sax/helpers/ParserFactory.java \
	$(SOURCEDIR)/org/xml/sax/helpers/XMLFilterImpl.java \
	$(SOURCEDIR)/org/xml/sax/helpers/XMLReaderAdapter.java \
	$(SOURCEDIR)/org/xml/sax/helpers/XMLReaderFactory.java \
	$(SOURCEDIR)/org/xml/sax/AttributeList.java \
	$(SOURCEDIR)/org/xml/sax/Attributes.java \
	$(SOURCEDIR)/org/xml/sax/ContentHandler.java \
	$(SOURCEDIR)/org/xml/sax/DocumentHandler.java \
	$(SOURCEDIR)/org/xml/sax/DTDHandler.java \
	$(SOURCEDIR)/org/xml/sax/EntityResolver.java \
	$(SOURCEDIR)/org/xml/sax/ErrorHandler.java \
	$(SOURCEDIR)/org/xml/sax/HandlerBase.java \
	$(SOURCEDIR)/org/xml/sax/InputSource.java \
	$(SOURCEDIR)/org/xml/sax/Locator.java \
	$(SOURCEDIR)/org/xml/sax/Parser.java \
	$(SOURCEDIR)/org/xml/sax/SAXException.java \
	$(SOURCEDIR)/org/xml/sax/SAXNotRecognizedException.java \
	$(SOURCEDIR)/org/xml/sax/SAXNotSupportedException.java \
	$(SOURCEDIR)/org/xml/sax/SAXParseException.java \
	$(SOURCEDIR)/org/xml/sax/XMLFilter.java \
	$(SOURCEDIR)/org/xml/sax/XMLReader.java \
	$(SOURCEDIR)/gnu/xml/aelfred2/SAXDriver.java \
	$(SOURCEDIR)/gnu/xml/aelfred2/XmlParser.java \
	$(SOURCEDIR)/gnu/xml/aelfred2/XmlReader.java \
	$(SOURCEDIR)/gnu/xml/aelfred2/JAXPFactory.java \
	$(SOURCEDIR)/gnu/xml/pipeline/CallFilter.java \
	$(SOURCEDIR)/gnu/xml/pipeline/DomConsumer.java \
	$(SOURCEDIR)/gnu/xml/pipeline/EventConsumer.java \
	$(SOURCEDIR)/gnu/xml/pipeline/EventFilter.java \
	$(SOURCEDIR)/gnu/xml/pipeline/LinkFilter.java \
	$(SOURCEDIR)/gnu/xml/pipeline/NSFilter.java \
	$(SOURCEDIR)/gnu/xml/pipeline/PipelineFactory.java \
	$(SOURCEDIR)/gnu/xml/pipeline/TeeConsumer.java \
	$(SOURCEDIR)/gnu/xml/pipeline/TextConsumer.java \
	$(SOURCEDIR)/gnu/xml/pipeline/ValidationConsumer.java \
	$(SOURCEDIR)/gnu/xml/pipeline/WellFormednessFilter.java \
	$(SOURCEDIR)/gnu/xml/pipeline/XIncludeFilter.java \
	$(SOURCEDIR)/gnu/xml/pipeline/XsltFilter.java \
	$(SOURCEDIR)/gnu/xml/util/DoParse.java \
	$(SOURCEDIR)/gnu/xml/util/DomParser.java \
	$(SOURCEDIR)/gnu/xml/util/Resolver.java \
	$(SOURCEDIR)/gnu/xml/util/XHTMLWriter.java \
	$(SOURCEDIR)/gnu/xml/util/XMLWriter.java \
	$(SOURCEDIR)/gnu/xml/dom/Consumer.java \
	$(SOURCEDIR)/gnu/xml/dom/DomAttr.java \
	$(SOURCEDIR)/gnu/xml/dom/DomCDATA.java \
	$(SOURCEDIR)/gnu/xml/dom/DomCharacterData.java \
	$(SOURCEDIR)/gnu/xml/dom/DomComment.java \
	$(SOURCEDIR)/gnu/xml/dom/DomDoctype.java \
	$(SOURCEDIR)/gnu/xml/dom/DomDocument.java \
	$(SOURCEDIR)/gnu/xml/dom/DomElement.java \
	$(SOURCEDIR)/gnu/xml/dom/DomEntity.java \
	$(SOURCEDIR)/gnu/xml/dom/DomEntityReference.java \
	$(SOURCEDIR)/gnu/xml/dom/DomEvent.java \
	$(SOURCEDIR)/gnu/xml/dom/DomEx.java \
	$(SOURCEDIR)/gnu/xml/dom/DomExtern.java \
	$(SOURCEDIR)/gnu/xml/dom/DomFragment.java \
	$(SOURCEDIR)/gnu/xml/dom/DomImpl.java \
	$(SOURCEDIR)/gnu/xml/dom/DomIterator.java \
	$(SOURCEDIR)/gnu/xml/dom/DomNamedNodeMap.java \
	$(SOURCEDIR)/gnu/xml/dom/DomNode.java \
	$(SOURCEDIR)/gnu/xml/dom/DomNotation.java \
	$(SOURCEDIR)/gnu/xml/dom/DomNsNode.java \
	$(SOURCEDIR)/gnu/xml/dom/DomPI.java \
	$(SOURCEDIR)/gnu/xml/dom/DomText.java \
	$(SOURCEDIR)/gnu/xml/dom/JAXPFactory.java \

PKGFILES = \
	$(SOURCEDIR)/gnu/xml/aelfred2/package.html \
	$(SOURCEDIR)/gnu/xml/dom/package.html \
	$(SOURCEDIR)/gnu/xml/pipeline/package.html \
	$(SOURCEDIR)/gnu/xml/util/package.html \
	$(SOURCEDIR)/javax/xml/parsers/package.html \
	$(SOURCEDIR)/javax/xml/transform/package.html \
	$(SOURCEDIR)/javax/xml/transform/dom/package.html \
	$(SOURCEDIR)/javax/xml/transform/sax/package.html \
	$(SOURCEDIR)/javax/xml/transform/stream/package.html \
	$(SOURCEDIR)/org/w3c/dom/package.html \
	$(SOURCEDIR)/org/w3c/dom/events/package.html \
	$(SOURCEDIR)/org/w3c/dom/traversal/package.html \
	$(SOURCEDIR)/org/w3c/dom/views/package.html \
	$(SOURCEDIR)/org/xml/sax/package.html \
	$(SOURCEDIR)/org/xml/sax/ext/package.html \
	$(SOURCEDIR)/org/xml/sax/helpers/package.html \


#a mangling of the SOURCEFILES list above
#This is not quite perfect, we've had to hardcode the 
# $(SOURCEDIR)/ directory in the swap but if we can find a
# way around that we'll be laughing!
CLASSESLIST=$(subst .java,.class,$(subst $(SOURCEDIR)/,$(CC-DESTDIR)/,$(foreach dir,$(SOURCEFILES),$(dir))))

#the classpath for compilations
CC-CLASSPATH =  bin/

CPATH = $(subst $(space),:,$(CC-CLASSPATH))

#the desination directory for compilations
CC-DESTDIR =	bin

#
# Compiler is chosen through "configure" (autoconf)
#
GCJ_OPTS = --encoding=8859_1 -fsyntax-only -femit-class-files 
GCJ_COMPILE = $(GCJ) $(GCJ_OPTS) -Isource -foutput-class-dir=$(CC-DESTDIR)

JAVAC_COMPILE = javac -sourcepath source -classpath  $(CPATH) -d $(CC-DESTDIR)

##variables which define some useful constants

newline:=\\n
empty:=
space:=$(empty) $(empty)


#
# REAL TARGETS
#

default: $(LIBNAME).jar

all: $(LIBNAME).jar javadoc


# for normal development
# must rerun "make" after this
clean:
	-rm -rf $(LIBNAME).jar $(CC-DESTDIR) Log apidoc apidoc.zip
	-rm -rf gnujaxp-*.zip

# must rerun configure after this
distclean:	clean
	-rm -f Makefile config.cache config.log config.status

# must rerun autoconf (and configure) after this
mrproper:	distclean
	-rm -f configure

javadoc: apidoc.zip
apidoc.zip:
	-rm -rf apidoc
	mkdir -p apidoc
	javadoc -d apidoc \
	    -windowtitle "GNU JAXP Library" \
	    -nodeprecatedlist \
	    -version -author -use \
	    -bottom "<p>Source code is under GPL \
		(with library exception) in the JAXP project at \
		<a href='http://www.gnu.org/software/classpathx/jaxp'> \
		http://www.gnu.org/software/classpathx/jaxp</a> \
		<br>This documentation was derived from that\
		source code on `date -I`.\
		</p>" \
	    -classpath "$(SOURCEDIR)" \
	    \
	    -group "AElfred2 and SAX2 Utilities" \
	    	"gnu.xml.aelfred2:gnu.xml.pipeline:gnu.xml.util" \
	    -group "DOM2, implementing DOM Level 2" \
	    	"gnu.xml.dom" \
	    \
	    -group "SAX and SAX2" \
	    	"org.xml.sax:org.xml.sax.ext:org.xml.sax.helpers" \
	    -group "DOM Level 2 (W3C)" \
	    	"org.w3c.*" \
	    -group "Java API for XML (v1.1) (Sun)" \
	    	"javax.xml.*" \
	    \
	    gnu.xml.aelfred2 gnu.xml.pipeline gnu.xml.util \
	    gnu.xml.dom \
	    org.xml.sax org.xml.sax.ext org.xml.sax.helpers \
	    org.w3c.dom org.w3c.dom.events \
	    javax.xml.parsers \
	    javax.xml.transform javax.xml.transform.dom \
	    javax.xml.transform.sax javax.xml.transform.stream
	jar cMf apidoc.zip apidoc

#build the $(LIBNAME) jar file
$(LIBNAME).jar: $(LIBNAME) $(CC-DESTDIR)
	mkdir -p $(CC-DESTDIR)/META-INF/services
	echo -n gnu.xml.aelfred2.XmlReader > \
	$(CC-DESTDIR)/META-INF/services/org.xml.sax.driver
	echo -n gnu.xml.aelfred2.JAXPFactory > \
	$(CC-DESTDIR)/META-INF/services/javax.xml.parsers.SAXParserFactory
	echo -n gnu.xml.dom.JAXPFactory > \
	$(CC-DESTDIR)/META-INF/services/javax.xml.parsers.DocumentBuilderFactory
	cp COPYING LICENSE $(CC-DESTDIR)/META-INF
	cd $(CC-DESTDIR); jar cmf ../manifest.mf ../$(LIBNAME).jar \
		META-INF gnu org/xml org/w3c javax/xml


$(LIBNAME): compile


#the compilation target
#This is intended for developers who are constantly compiling stuff
#
#NOTE: this has to use a shell if test because the GNU-Make $(wildcard) 
#doesn't work properly. If it did we could do this:
#
#  compile: $(CLASSLIST)
#  ifeq "$(wildcard filelist.mak)" "filelist.mak"
#	$(@COMPILER@_COMPILE) @filelist.mak
#	@rm filelist.mak
#  else
#	@echo Nothing to be done for compile.
#  endif
#
#I think that would be a lot better and have reported the fault with
#the $(wildcard) function to bug-make@gnu.org.
#The problem is that it does not recognise the existance of files created
#within commands caused by pre-requisites.

compile: $(CLASSESLIST)
	mkdir -p $(CC-DESTDIR)
	if [ -e filelist.mak ] ; then \
	  $(@COMPILER@_COMPILE) @filelist.mak  ; \
	  rm filelist.mak ; \
	fi

#recompile all the source files
.PHONY: recompile

recompile: clean-filelist all-source-files
	$(@COMPILER@_COMPILE) @filelist.mak
	rm filelist.mak


#make the source file list be the list of all files
.PHONY: all-source-files

all-source-files:
	$(foreach sourcefile,$(SOURCEFILES),$(shell echo $(sourcefile) >> filelist.mak))


#ensures that the filelist is fresh each time
#This simply removes the file list (after ensuring that it exists)
.PHONY: clean-filelist

clean-filelist: 
	rm -f filelist.mak

#target matching class files to source files
$(CC-DESTDIR)/%.class: $(SOURCEDIR)/%.java
	@echo $? >> filelist.mak


#
# RELEASE ENGINEERING:
# "full" release has source, jarfile, javadoc, and extras
#
# override VERSION in environment, like:
#  $ VERSION=1.0beta1 make -e release
#
VERSION =	dev

release: gnujaxp-$(VERSION).zip


DIST_DIR =	gnujaxp-$(VERSION)

# XXX ChangeLog
FILES		:= \
	LICENSE COPYING COPYRIGHT.html README \
	gnujaxp.jar \
	configure Makefile.in manifest.mf 

gnujaxp-$(VERSION).zip: $(FILES) apidoc.zip $(SOURCEFILES) $(PKGFILES)
	for F in $(FILES) $(SOURCEFILES) $(PKGFILES) ;\
	do \
	    mkdir -p `dirname $(DIST_DIR)/$$F` ;\
	    cp $$F $(DIST_DIR)/$$F ;\
	done
	cd $(DIST_DIR); jar xf ../apidoc.zip
	chmod +x $(DIST_DIR)/configure
	cp gnujaxp.jar $(DIST_DIR)
	# jar cMf gnujaxp-$(VERSION).zip $(DIST_DIR)
	zip -qr9 gnujaxp-$(VERSION).zip $(DIST_DIR)
	rm -rf $(DIST_DIR)

